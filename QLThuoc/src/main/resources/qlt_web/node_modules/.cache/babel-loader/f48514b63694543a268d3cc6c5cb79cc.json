{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport headerConfig from '../helpers/headerHelper';\nimport { API, ACTION_TYPES } from \"../constants\";\nimport { showAlertFail, showAlertAndReset } from \"./alertAction\";\nexport var init = function init() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(API.IMPORT.INIT, null, headerConfig);\n\n              case 3:\n                response = _context.sent;\n                dispatch(initSuccess(response.data));\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(showAlertFail(_context.t0));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var initSuccess = function initSuccess(data) {\n  return {\n    type: ACTION_TYPES.IMPORT.INIT,\n    payload: data\n  };\n};\nexport var getSpecUnit = function getSpecUnit(productId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.post(API.PRODUCT.GET_SPEC_UNIT, productId, headerConfig);\n\n              case 3:\n                response = _context2.sent;\n                dispatch(setSpecUnitSelection(response.data));\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(showAlertFail(_context2.t0));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setSpecUnitSelection = function setSpecUnitSelection(data) {\n  return {\n    type: ACTION_TYPES.IMPORT.SET_SPEC_SELECTION,\n    payload: data\n  };\n};\nexport var save = function save(data, branch) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Axios.post(API.IMPORT.SAVE, {\n                  data: data,\n                  branch: branch\n                }, headerConfig);\n\n              case 3:\n                response = _context3.sent;\n\n                if (response.status === 200) {\n                  dispatch(saveSuccess());\n                  dispatch(showAlertAndReset());\n                } else {\n                  dispatch(showAlertFail(response));\n                }\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch(showAlertFail(_context3.t0));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var saveSuccess = function saveSuccess() {\n  return {\n    type: ACTION_TYPES.IMPORT.SAVE_SUCCESS\n  };\n};\nexport var resetSaveSuccess = function resetSaveSuccess() {\n  return {\n    type: ACTION_TYPES.IMPORT.RESET_SAVE_SUCCESS\n  };\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\QLThuoc\\src\\main\\resources\\qlt_web\\src\\actions\\importProductAction.js"],"names":["Axios","headerConfig","API","ACTION_TYPES","showAlertFail","showAlertAndReset","init","dispatch","post","IMPORT","INIT","response","initSuccess","data","type","payload","getSpecUnit","productId","PRODUCT","GET_SPEC_UNIT","setSpecUnitSelection","SET_SPEC_SELECTION","save","branch","SAVE","status","saveSuccess","SAVE_SUCCESS","resetSaveSuccess","RESET_SAVE_SUCCESS"],"mappings":"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","sourcesContent":["import Axios from \"axios\"\r\nimport headerConfig from '../helpers/headerHelper'\r\nimport { API, ACTION_TYPES } from \"../constants\"\r\nimport { showAlertFail, showAlertAndReset } from \"./alertAction\";\r\n\r\nexport const init = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.post(API.IMPORT.INIT,null ,headerConfig);\r\n      dispatch(initSuccess(response.data));\r\n    } catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const initSuccess = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.IMPORT.INIT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getSpecUnit = (productId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.post(API.PRODUCT.GET_SPEC_UNIT, productId, headerConfig);\r\n      dispatch(setSpecUnitSelection(response.data));\r\n    } catch(err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const setSpecUnitSelection = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.IMPORT.SET_SPEC_SELECTION,\r\n    payload: data\r\n  }\r\n}\r\nexport const save = (data, branch) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.post(API.IMPORT.SAVE, {data, branch}, headerConfig);\r\n      if(response.status === 200) {\r\n        dispatch(saveSuccess());\r\n        dispatch(showAlertAndReset());\r\n      } else {\r\n        dispatch(showAlertFail(response));\r\n      }\r\n    } catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const saveSuccess = () => {\r\n  return {\r\n    type: ACTION_TYPES.IMPORT.SAVE_SUCCESS\r\n  }\r\n}\r\nexport const resetSaveSuccess = () => {\r\n  return {\r\n    type: ACTION_TYPES.IMPORT.RESET_SAVE_SUCCESS\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}