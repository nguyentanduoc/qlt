{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { API, ACTION_TYPES } from '../constants';\nimport Axios from 'axios';\nimport headerConfig from '../helpers/headerHelper';\nimport { showAlertFail, showAlertSuccess } from './alertAction.js';\nexport var getAllProduct = function getAllProduct(branch) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(API.PRODUCT.GET_PRODUCT_FOR_REQUEST, branch, headerConfig);\n\n              case 3:\n                request = _context.sent;\n                return _context.abrupt(\"return\", dispatch(getProductSucces(request.data)));\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", dispatch(showAlertFail(_context.t0)));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProductSucces = function getProductSucces(data) {\n  return {\n    type: ACTION_TYPES.REQUEST.SET_PRODUCT,\n    payload: data\n  };\n};\nexport var getUnit = function getUnit(productId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.post(API.PRODUCT.GET_UNIT_OF_PRODUCT, productId, headerConfig);\n\n              case 3:\n                response = _context2.sent;\n                dispatch(setUnitSelection(response.data));\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(showAlertFail(_context2.t0));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setUnitSelection = function setUnitSelection(data) {\n  return {\n    type: ACTION_TYPES.REQUEST.SET_UNIT,\n    payload: data\n  };\n};\nexport var getAmountProduct = function getAmountProduct(id, branchId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Axios.post(API.PRODUCT.GET_AMOUNT_PRODUCT, {\n                  id: id,\n                  branchId: branchId\n                }, headerConfig);\n\n              case 3:\n                response = _context3.sent;\n                dispatch(getAmountProductSuccess(response.data));\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch(showAlertFail(_context3.t0));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getAmountProductSuccess = function getAmountProductSuccess(data) {\n  return {\n    type: ACTION_TYPES.REQUEST.GET_AMOUNT_PRODUCT_SUCCESS,\n    payload: data\n  };\n};\nexport var save = function save(data, branch, noteRequest) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return Axios.post(API.REQUEST.SAVE, {\n                  data: data,\n                  branch: branch,\n                  noteRequest: noteRequest\n                }, headerConfig);\n\n              case 3:\n                dispatch(showAlertSuccess());\n                _context4.next = 9;\n                break;\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                dispatch(showAlertFail(_context4.t0));\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var saveSuccess = function saveSuccess() {\n  return {\n    type: ACTION_TYPES.REQUEST.GET_AMOUNT_PRODUCT_SUCCESS,\n    payload: data\n  };\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\qlt_web\\src\\actions\\requestProductAction.js"],"names":["API","ACTION_TYPES","Axios","headerConfig","showAlertFail","showAlertSuccess","getAllProduct","branch","dispatch","post","PRODUCT","GET_PRODUCT_FOR_REQUEST","request","getProductSucces","data","type","REQUEST","SET_PRODUCT","payload","getUnit","productId","GET_UNIT_OF_PRODUCT","response","setUnitSelection","SET_UNIT","getAmountProduct","id","branchId","GET_AMOUNT_PRODUCT","getAmountProductSuccess","GET_AMOUNT_PRODUCT_SUCCESS","save","noteRequest","SAVE","saveSuccess"],"mappings":"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","sourcesContent":["import {API, ACTION_TYPES} from '../constants';\nimport Axios from 'axios';\nimport headerConfig from '../helpers/headerHelper'\nimport {showAlertFail, showAlertSuccess} from './alertAction.js'\n\nexport const getAllProduct = (branch) => {\n  return async (dispatch) => {\n    try {\n      const request = await Axios.post(API.PRODUCT.GET_PRODUCT_FOR_REQUEST, branch, headerConfig);\n      return dispatch(getProductSucces(request.data));\n    } catch (err) {\n      return dispatch(showAlertFail(err))\n    }\n  }\n}\n\nexport const getProductSucces = (data) => {\n  return {\n    type: ACTION_TYPES.REQUEST.SET_PRODUCT,\n    payload: data\n  }\n}\n\nexport const getUnit = (productId) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(API.PRODUCT.GET_UNIT_OF_PRODUCT, productId, headerConfig);\n      dispatch(setUnitSelection(response.data));\n    } catch (err) {\n      dispatch(showAlertFail(err));\n    }\n  }\n}\n\nexport const setUnitSelection = (data) => {\n  return {\n    type: ACTION_TYPES.REQUEST.SET_UNIT,\n    payload: data\n  }\n}\n\nexport const getAmountProduct = (id, branchId) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(API.PRODUCT.GET_AMOUNT_PRODUCT, {id, branchId}, headerConfig);\n      dispatch(getAmountProductSuccess(response.data));\n    } catch (err) {\n      dispatch(showAlertFail(err));\n    }\n  }\n}\n\nexport const getAmountProductSuccess = (data) => {\n  return {\n    type: ACTION_TYPES.REQUEST.GET_AMOUNT_PRODUCT_SUCCESS,\n    payload: data\n  }\n}\n\nexport const save = (data, branch, noteRequest) => {\n  return async (dispatch) => {\n    try {\n      await Axios.post(API.REQUEST.SAVE, {data, branch, noteRequest}, headerConfig);\n      dispatch(showAlertSuccess());\n    } catch (err) {\n      dispatch(showAlertFail(err));\n    }\n  }\n}\n\nexport const saveSuccess = () => {\n  return {\n    type: ACTION_TYPES.REQUEST.GET_AMOUNT_PRODUCT_SUCCESS,\n    payload: data\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}