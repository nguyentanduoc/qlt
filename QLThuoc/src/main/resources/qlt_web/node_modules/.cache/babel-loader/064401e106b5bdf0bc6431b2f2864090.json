{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ACTION_TYPES, API } from '../constants';\nimport axios from 'axios';\nimport headerConfig, { header } from '../helpers/headerHelper';\nexport var getAllRole = function getAllRole() {\n  var config = {\n    headers: header()\n  };\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(API.ROLE.GET_ALL_ROLE, null, config);\n\n              case 3:\n                res = _context.sent;\n                dispatch(getAllRoleSuccess(res.data));\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(getAllRoleFail(_context.t0));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getRoleForAdmin = function getRoleForAdmin() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(API.ROLE.GET_ROLE_FOR_ADMIN, null, headerConfig);\n\n              case 3:\n                res = _context2.sent;\n                dispatch(getAllRoleSuccess(res.data));\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(getAllRoleFail(_context2.t0));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getAllRoleSuccess = function getAllRoleSuccess(data) {\n  return {\n    type: ACTION_TYPES.GET_ALL_ROLE_SUCCESS,\n    payload: data\n  };\n};\nexport var getRolesByRoles = function getRolesByRoles(roles) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.post(API.ROLE.GET_ROLES_BY_ROLES, roles, headerConfig);\n\n              case 3:\n                res = _context3.sent;\n                dispatch(getAllRoleSuccess(res.data));\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch(getAllRoleFail(_context3.t0));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getAllRoleFail = function getAllRoleFail(err) {\n  return {\n    type: ACTION_TYPES.GET_ALL_ROLE_FAIL,\n    payload: err\n  };\n};\nexport var openDetailRolesOfUser = function openDetailRolesOfUser(user) {\n  return {\n    type: ACTION_TYPES.OPEN_LIST_ROLE_OF_USER,\n    payload: user\n  };\n};\nexport var setRoleUser = function setRoleUser(user) {\n  return {\n    type: ACTION_TYPES.SET_ROLE_USER,\n    payload: user\n  };\n};\nexport var removeUserRoleDetail = function removeUserRoleDetail() {\n  return {\n    type: ACTION_TYPES.REMOVE_USER_DETAIL_FOR_ROLE\n  };\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\QLThuoc\\src\\main\\resources\\qlt_web\\src\\actions\\roleAction.js"],"names":["ACTION_TYPES","API","axios","headerConfig","header","getAllRole","config","headers","dispatch","post","ROLE","GET_ALL_ROLE","res","getAllRoleSuccess","data","getAllRoleFail","getRoleForAdmin","GET_ROLE_FOR_ADMIN","type","GET_ALL_ROLE_SUCCESS","payload","getRolesByRoles","roles","GET_ROLES_BY_ROLES","err","GET_ALL_ROLE_FAIL","openDetailRolesOfUser","user","OPEN_LIST_ROLE_OF_USER","setRoleUser","SET_ROLE_USER","removeUserRoleDetail","REMOVE_USER_DETAIL_FOR_ROLE"],"mappings":"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","sourcesContent":["import { ACTION_TYPES, API } from '../constants';\r\nimport axios from 'axios';\r\nimport headerConfig,{ header } from '../helpers/headerHelper';\r\n\r\nexport const getAllRole = () => {\r\n  let config = {\r\n    headers: header()\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(API.ROLE.GET_ALL_ROLE, null ,config);\r\n      dispatch(getAllRoleSuccess(res.data));\r\n    } catch (error) {\r\n      dispatch(getAllRoleFail(error));\r\n    }\r\n  }\r\n}\r\nexport const getRoleForAdmin  = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(API.ROLE.GET_ROLE_FOR_ADMIN, null ,headerConfig);\r\n      dispatch(getAllRoleSuccess(res.data));\r\n    } catch (error) {\r\n      dispatch(getAllRoleFail(error));\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAllRoleSuccess = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.GET_ALL_ROLE_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getRolesByRoles = (roles) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(API.ROLE.GET_ROLES_BY_ROLES, roles ,headerConfig);\r\n      dispatch(getAllRoleSuccess(res.data));\r\n    } catch (error) {\r\n      dispatch(getAllRoleFail(error));\r\n    }\r\n  }\r\n}\r\nexport const getAllRoleFail = (err) => {\r\n  return {\r\n    type: ACTION_TYPES.GET_ALL_ROLE_FAIL,\r\n    payload: err\r\n  }\r\n}\r\n\r\nexport const openDetailRolesOfUser = (user) =>{\r\n  return {\r\n    type: ACTION_TYPES.OPEN_LIST_ROLE_OF_USER,\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const setRoleUser = (user) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_ROLE_USER,\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const removeUserRoleDetail = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_DETAIL_FOR_ROLE\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}