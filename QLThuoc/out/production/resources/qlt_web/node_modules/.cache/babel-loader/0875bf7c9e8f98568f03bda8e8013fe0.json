{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { API, ACTION_TYPES } from '../constants';\nimport axios from 'axios';\nimport headerConfig, { headerForGet } from '../helpers/headerHelper';\nimport { showAlertFail, showAlertAndReset } from './alertAction.js';\nimport { setPagination } from '../actions/paginationAction';\nexport var save = function save(branch) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(API.BRANCH.SAVE, branch, headerConfig);\n\n              case 3:\n                _context.next = 5;\n                return dispatch(select());\n\n              case 5:\n                _context.next = 7;\n                return dispatch(showAlertAndReset());\n\n              case 7:\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(showAlertFail(_context.t0));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var select = function select(condition) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(API.BRANCH.SELECT, condition, headerConfig);\n\n              case 3:\n                res = _context2.sent;\n                dispatch(setPagination(res.data));\n                dispatch(selectSuccess(res.data.content));\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(showAlertFail(_context2.t0));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var selectSuccess = function selectSuccess(data) {\n  return {\n    type: ACTION_TYPES.BRANCH.GET_SUCCESS,\n    payload: data\n  };\n};\nexport var setBranch = function setBranch(data) {\n  return {\n    type: ACTION_TYPES.BRANCH.SET_BRANCH,\n    payload: data\n  };\n};\nexport var resetAll = function resetAll() {\n  return {\n    type: ACTION_TYPES.BRANCH.RESET_ALL\n  };\n};\nexport var resetBranch = function resetBranch() {\n  return {\n    type: ACTION_TYPES.BRANCH.RESET_BRANCH\n  };\n};\nexport var deleteBranch = function deleteBranch(keys) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.post(API.BRANCH.DELETE, keys, headerConfig);\n\n              case 3:\n                dispatch(showAlertAndReset());\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch(showAlertFail(_context3.t0));\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var selectAllShop = function selectAllShop() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return axios.get(API.SHOP.SELECT_ALL, headerForGet());\n\n              case 3:\n                res = _context4.sent;\n                dispatch(getAllShopSuccess(res.data));\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                dispatch(showAlertFail(_context4.t0));\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getAllShopSuccess = function getAllShopSuccess(data) {\n  return {\n    type: ACTION_TYPES.BRANCH.GET_ALL_SHOP,\n    payload: data\n  };\n};\nexport var getBranchOfDirector = function getBranchOfDirector(idDirector) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return axios.post(API.BRANCH.SELECT_BRANCH_OF_DIRECTOR, idDirector, headerConfig);\n\n              case 3:\n                res = _context5.sent;\n                dispatch(branchForSelection(res.data));\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                dispatch(showAlertFail(_context5.t0));\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var branchForSelection = function branchForSelection(data) {\n  var selection = data.map(function (b) {\n    return {\n      value: b.id,\n      label: b.name\n    };\n  });\n  return {\n    type: ACTION_TYPES.BRANCH.BRANCH_FOR_SELECTION,\n    payload: selection\n  };\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\qlt_web\\src\\actions\\branchAction.js"],"names":["API","ACTION_TYPES","axios","headerConfig","headerForGet","showAlertFail","showAlertAndReset","setPagination","save","branch","dispatch","post","BRANCH","SAVE","select","condition","SELECT","res","data","selectSuccess","content","type","GET_SUCCESS","payload","setBranch","SET_BRANCH","resetAll","RESET_ALL","resetBranch","RESET_BRANCH","deleteBranch","keys","DELETE","selectAllShop","get","SHOP","SELECT_ALL","getAllShopSuccess","GET_ALL_SHOP","getBranchOfDirector","idDirector","SELECT_BRANCH_OF_DIRECTOR","branchForSelection","selection","map","b","value","id","label","name","BRANCH_FOR_SELECTION"],"mappings":"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","sourcesContent":["import { API, ACTION_TYPES } from '../constants'\r\nimport axios from 'axios'\r\nimport headerConfig, { headerForGet } from '../helpers/headerHelper'\r\nimport {showAlertFail, showAlertAndReset} from './alertAction.js'\r\nimport { setPagination } from '../actions/paginationAction'\r\n\r\nexport const save = (branch) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.post(API.BRANCH.SAVE, branch ,headerConfig);\r\n      await dispatch(select());\r\n      await dispatch(showAlertAndReset());\r\n    }\r\n    catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\n\r\nexport const select = (condition) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(API.BRANCH.SELECT, condition, headerConfig);\r\n      dispatch(setPagination(res.data));\r\n      dispatch(selectSuccess(res.data.content));\r\n    }\r\n    catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\n\r\nexport const selectSuccess = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.BRANCH.GET_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const setBranch = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.BRANCH.SET_BRANCH,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const resetAll = () => {\r\n  return { type: ACTION_TYPES.BRANCH.RESET_ALL }\r\n}\r\n\r\nexport const resetBranch = () => {\r\n  return { type: ACTION_TYPES.BRANCH.RESET_BRANCH }\r\n}\r\n\r\nexport const deleteBranch = (keys) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.post(API.BRANCH.DELETE, keys ,headerConfig);\r\n      dispatch(showAlertAndReset());\r\n    } catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const selectAllShop = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(API.SHOP.SELECT_ALL, headerForGet());\r\n      dispatch(getAllShopSuccess(res.data));\r\n    } catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const getAllShopSuccess = (data) => ({\r\n  type: ACTION_TYPES.BRANCH.GET_ALL_SHOP,\r\n  payload: data\r\n})\r\nexport const getBranchOfDirector = (idDirector) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(API.BRANCH.SELECT_BRANCH_OF_DIRECTOR, idDirector, headerConfig); \r\n      dispatch(branchForSelection(res.data));\r\n    } catch(err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\n\r\nexport const branchForSelection = (data) => {\r\n  let selection = data.map(b => {\r\n    return {value: b.id, label: b.name}\r\n  });\r\n  return {\r\n    type: ACTION_TYPES.BRANCH.BRANCH_FOR_SELECTION,\r\n    payload: selection\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}