{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { API, ACTION_TYPES } from \"../constants\";\nimport { showAlertFail } from \"./alertAction\";\nimport Axios from \"axios\";\nimport headerHelper from \"../helpers/headerHelper\";\nexport var getBillRequest = function getBillRequest(branch) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(API.REQUEST.GET_BILL_REQUEST, branch, headerHelper);\n\n              case 3:\n                response = _context.sent;\n\n                if (response.status === 200) {} else {\n                  dispatch(showAlertFail(response));\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(showAlertFail(_context.t0));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getBillRequestSuccess = function getBillRequestSuccess() {\n  return {};\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\qlt_web\\src\\actions\\acceptAction.js"],"names":["API","ACTION_TYPES","showAlertFail","Axios","headerHelper","getBillRequest","branch","dispatch","post","REQUEST","GET_BILL_REQUEST","response","status","getBillRequestSuccess"],"mappings":";;AAAA,SAAQA,GAAR,EAAaC,YAAb,QAAgC,cAAhC;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEoBJ,KAAK,CAACK,IAAN,CAAWR,GAAG,CAACS,OAAJ,CAAYC,gBAAvB,EAAyCJ,MAAzC,EAAiDF,YAAjD,CAFpB;;AAAA;AAEGO,gBAAAA,QAFH;;AAGH,oBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B,CAE3B,CAFD,MAEO;AACLL,kBAAAA,QAAQ,CAACL,aAAa,CAACS,QAAD,CAAd,CAAR;AACD;;AAPE;AAAA;;AAAA;AAAA;AAAA;AASHJ,gBAAAA,QAAQ,CAACL,aAAa,aAAd,CAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD,CAbM;AAeP,OAAO,IAAMW,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACzC,SAAO,EAAP;AAGD,CAJM","sourcesContent":["import {API, ACTION_TYPES} from \"../constants\";\nimport {showAlertFail} from \"./alertAction\";\nimport Axios from \"axios\";\nimport headerHelper from \"../helpers/headerHelper\";\n\nexport const getBillRequest = (branch) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(API.REQUEST.GET_BILL_REQUEST, branch, headerHelper);\n      if(response.status === 200) {\n\n      } else {\n        dispatch(showAlertFail(response));\n      }\n    } catch (e) {\n      dispatch(showAlertFail(e));\n    }\n  }\n}\n\nexport const getBillRequestSuccess = () => {\n  return {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}