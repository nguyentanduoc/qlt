{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { API, ACTION_TYPES } from \"../constants\";\nimport { showAlertFail } from \"./alertAction\";\nimport Axios from \"axios\";\nimport headerHelper from \"../helpers/headerHelper\";\nexport var getBillRequest = function getBillRequest(branch) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(API.REQUEST.GET_BILL_REQUEST, branch, headerHelper);\n\n              case 3:\n                response = _context.sent;\n\n                if (!(response.status === 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", dispatch(getBillRequestSuccess(response.data)));\n\n              case 8:\n                return _context.abrupt(\"return\", dispatch(showAlertFail(response)));\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", dispatch(showAlertFail(_context.t0)));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getBillRequestSuccess = function getBillRequestSuccess(data) {\n  return {\n    type: ACTION_TYPES.ACCEPT.GET_ALL_BILL_SUCCESS,\n    payload: data\n  };\n};\nexport var getDetail = function getDetail(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.post(API.REQUEST);\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", dispatch(showAlertFail(_context2.t0)));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 6]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\qlt_web\\src\\actions\\acceptAction.js"],"names":["API","ACTION_TYPES","showAlertFail","Axios","headerHelper","getBillRequest","branch","dispatch","post","REQUEST","GET_BILL_REQUEST","response","status","getBillRequestSuccess","data","type","ACCEPT","GET_ALL_BILL_SUCCESS","payload","getDetail","id"],"mappings":";;AAAA,SAAQA,GAAR,EAAaC,YAAb,QAAgC,cAAhC;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEoBJ,KAAK,CAACK,IAAN,CAAWR,GAAG,CAACS,OAAJ,CAAYC,gBAAvB,EAAyCJ,MAAzC,EAAiDF,YAAjD,CAFpB;;AAAA;AAEGO,gBAAAA,QAFH;;AAAA,sBAGCA,QAAQ,CAACC,MAAT,KAAoB,GAHrB;AAAA;AAAA;AAAA;;AAAA,iDAIML,QAAQ,CAACM,qBAAqB,CAACF,QAAQ,CAACG,IAAV,CAAtB,CAJd;;AAAA;AAAA,iDAMMP,QAAQ,CAACL,aAAa,CAACS,QAAD,CAAd,CANd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDASIJ,QAAQ,CAACL,aAAa,aAAd,CATZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD,CAbM;AAeP,OAAO,IAAMW,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAU;AAC7C,SAAO;AACLC,IAAAA,IAAI,EAAEd,YAAY,CAACe,MAAb,CAAoBC,oBADrB;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOb,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEqBJ,KAAK,CAACK,IAAN,CAAWR,GAAG,CAACS,OAAf,CAFrB;;AAAA;AAEGE,gBAAAA,QAFH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kDAIIJ,QAAQ,CAACL,aAAa,cAAd,CAJZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,CARM","sourcesContent":["import {API, ACTION_TYPES} from \"../constants\";\nimport {showAlertFail} from \"./alertAction\";\nimport Axios from \"axios\";\nimport headerHelper from \"../helpers/headerHelper\";\n\nexport const getBillRequest = (branch) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(API.REQUEST.GET_BILL_REQUEST, branch, headerHelper);\n      if (response.status === 200) {\n        return dispatch(getBillRequestSuccess(response.data))\n      } else {\n        return dispatch(showAlertFail(response));\n      }\n    } catch (e) {\n      return dispatch(showAlertFail(e));\n    }\n  }\n}\n\nexport const getBillRequestSuccess = (data) => {\n  return {\n    type: ACTION_TYPES.ACCEPT.GET_ALL_BILL_SUCCESS,\n    payload: data\n  }\n}\n\nexport const getDetail = (id) => {\n  return async (dispatch) => {\n    try {\n      const response = await  Axios.post(API.REQUEST)\n    } catch (e) {\n      return dispatch(showAlertFail(e));\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}