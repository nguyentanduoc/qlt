{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\LV\\\\qlt\\\\QLThuoc\\\\src\\\\main\\\\resources\\\\qlt_web\\\\src\\\\views\\\\Roles\\\\DetailUserRole.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from 'reactstrap/lib/Card';\nimport CardHeader from 'reactstrap/lib/CardHeader';\nimport CardBody from 'reactstrap/lib/CardBody';\nimport { updateUserRole, setSetCloseAlert } from '../../actions/UserAction';\nimport { setRoleUser, removeUserRoleDetail } from '../../actions/roleAction';\nimport { Form, FormGroup, CustomInput, Button, Alert, Col, Label, CardFooter } from 'reactstrap';\n\nvar DetailUserRole =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailUserRole, _Component);\n\n  function DetailUserRole(props) {\n    var _this;\n\n    _classCallCheck(this, DetailUserRole);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailUserRole).call(this, props));\n    _this.changeHandler = _this.changeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DetailUserRole, [{\n    key: \"changeHandler\",\n    value: function changeHandler(event) {\n      var roleId = event.target.name;\n\n      if (event.target.type === 'checkbox') {\n        var userRoleDetail = this.props.roleReducer.userRoleDetail;\n\n        if (!event.target.checked) {\n          userRoleDetail.roles = this.props.roleReducer.userRoleDetail.roles.filter(function (role) {\n            return role.id !== parseInt(roleId);\n          });\n        } else {\n          var addRoles = this.props.roleReducer.roles.filter(function (role) {\n            return role.id === parseInt(roleId);\n          });\n          userRoleDetail.roles.push(addRoles[0]);\n        }\n\n        this.props.onSetRoleUser(userRoleDetail);\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return this.props.onUpdateUser(this.props.roleReducer.userRoleDetail);\n\n              case 3:\n                setTimeout(function () {\n                  this.props.onSetCloseAlert();\n                }.bind(this), 1500);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.omRemoveUserDetailForRole();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var checked = function checked(roleId) {\n        var roles = _this2.props.roleReducer.userRoleDetail.roles.filter(function (role) {\n          return role.id === roleId;\n        });\n\n        return roles[0] ? true : false;\n      };\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \"Th\\xF4ng tin quy\\u1EC1n\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"success\",\n        className: \"text-center\",\n        isOpen: this.props.userReducer.showAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng\"), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"T\\xEAn:\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-control-static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.roleReducer.userRoleDetail.name))), React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Quy\\u1EC1n:\")), React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.props.roleReducer.roles.map(function (role) {\n        return React.createElement(CustomInput, {\n          key: role.id,\n          type: \"checkbox\",\n          id: role.id,\n          label: role.detail,\n          name: role.id,\n          checked: checked(role.id),\n          onChange: _this2.changeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      })))), React.createElement(CardFooter, {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), \" L\\u01B0u\"))));\n    }\n  }]);\n\n  return DetailUserRole;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    roleReducer: state.role,\n    userReducer: state.user\n  };\n};\n\nvar mapDispathToProps = function mapDispathToProps(dispatch, props) {\n  return {\n    onUpdateUser: function () {\n      var _onUpdateUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(user) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", dispatch(updateUserRole(user)));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onUpdateUser(_x2) {\n        return _onUpdateUser.apply(this, arguments);\n      }\n\n      return onUpdateUser;\n    }(),\n    onSetRoleUser: function onSetRoleUser(user) {\n      return dispatch(setRoleUser(user));\n    },\n    onSetCloseAlert: function onSetCloseAlert() {\n      return dispatch(setSetCloseAlert());\n    },\n    omRemoveUserDetailForRole: function omRemoveUserDetailForRole() {\n      return dispatch(removeUserRoleDetail());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(DetailUserRole);","map":{"version":3,"sources":["D:\\LV\\qlt\\QLThuoc\\src\\main\\resources\\qlt_web\\src\\views\\Roles\\DetailUserRole.js"],"names":["React","Component","connect","Card","CardHeader","CardBody","updateUserRole","setSetCloseAlert","setRoleUser","removeUserRoleDetail","Form","FormGroup","CustomInput","Button","Alert","Col","Label","CardFooter","DetailUserRole","props","changeHandler","bind","handleSubmit","event","roleId","target","name","type","userRoleDetail","roleReducer","checked","roles","filter","role","id","parseInt","addRoles","push","onSetRoleUser","preventDefault","onUpdateUser","setTimeout","onSetCloseAlert","omRemoveUserDetailForRole","userReducer","showAlert","map","detail","mapStateToProps","state","user","mapDispathToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Card from 'reactstrap/lib/Card';\r\nimport CardHeader from 'reactstrap/lib/CardHeader';\r\nimport CardBody from 'reactstrap/lib/CardBody';\r\nimport { updateUserRole, setSetCloseAlert } from '../../actions/UserAction';\r\nimport { setRoleUser, removeUserRoleDetail } from '../../actions/roleAction';\r\nimport { Form, FormGroup, CustomInput, Button, Alert, Col, Label, CardFooter } from 'reactstrap';\r\n\r\nclass DetailUserRole extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    changeHandler(event) {\r\n        const roleId = event.target.name;\r\n        if (event.target.type === 'checkbox') {\r\n            let userRoleDetail = this.props.roleReducer.userRoleDetail;\r\n            if (!event.target.checked) {\r\n                userRoleDetail.roles = this.props.roleReducer.userRoleDetail.roles.filter(role => {\r\n                    return role.id !== parseInt(roleId)\r\n                });\r\n            }\r\n            else {\r\n                var addRoles = this.props.roleReducer.roles.filter(role => {\r\n                    return role.id === parseInt(roleId)\r\n                });\r\n                userRoleDetail.roles.push(addRoles[0]);\r\n            }\r\n            this.props.onSetRoleUser(userRoleDetail);\r\n        }\r\n    }\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await this.props.onUpdateUser(this.props.roleReducer.userRoleDetail);\r\n        setTimeout(\r\n            function () {\r\n                this.props.onSetCloseAlert();\r\n            }\r\n                .bind(this),\r\n            1500\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.omRemoveUserDetailForRole();\r\n    }\r\n    \r\n    render() {\r\n        let checked = roleId => {\r\n            let roles = this.props.roleReducer.userRoleDetail.roles.filter(role => {\r\n                return role.id === roleId\r\n            });\r\n            return roles[0] ? true : false;\r\n        }\r\n        return (\r\n            <Card>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <CardHeader>\r\n                        <i className=\"fa fa-user\"></i>Thông tin quyền\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Alert color=\"success\" className=\"text-center\" isOpen={this.props.userReducer.showAlert}>\r\n                            Cập nhật thành công\r\n                        </Alert>\r\n                        <FormGroup row>\r\n                            <Col md=\"3\">\r\n                                <Label>Tên:</Label>\r\n                            </Col>\r\n                            <Col xs=\"12\" md=\"9\">\r\n                                <p className=\"form-control-static\"><strong>{this.props.roleReducer.userRoleDetail.name}</strong></p>\r\n                            </Col>\r\n                            <Col md=\"3\"><Label>Quyền:</Label></Col>\r\n                            <Col md=\"9\">\r\n                                {this.props.roleReducer.roles.map(role => (\r\n                                    <CustomInput\r\n                                        key={role.id}\r\n                                        type=\"checkbox\"\r\n                                        id={role.id}\r\n                                        label={role.detail}\r\n                                        name={role.id}\r\n                                        checked={checked(role.id)}\r\n                                        onChange={this.changeHandler} />\r\n                                ))}\r\n                            </Col>\r\n                        </FormGroup>\r\n                        {/* <Button type=\"submit\" className=\"float-right\" color=\"primary\">Lưu</Button> */}\r\n                    </CardBody>\r\n                    <CardFooter className=\"text-right\">\r\n                        <Button type=\"submit\" size=\"sm\" color=\"success\"><i className=\"fa fa-dot-circle-o\"></i> Lưu</Button>\r\n                    </CardFooter>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        roleReducer: state.role,\r\n        userReducer: state.user\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch, props) => {\r\n    return {\r\n        onUpdateUser: async (user) => {\r\n            return dispatch(updateUserRole(user));\r\n        },\r\n        onSetRoleUser: (user) => {\r\n            return dispatch(setRoleUser(user));\r\n        },\r\n        onSetCloseAlert: () => {\r\n            return dispatch(setSetCloseAlert());\r\n        },\r\n        omRemoveUserDetailForRole: () => {\r\n            return dispatch(removeUserRoleDetail());\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispathToProps)(DetailUserRole);\r\n"]},"metadata":{},"sourceType":"module"}