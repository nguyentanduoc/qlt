{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { API, ACTION_TYPES } from '../constants';\nimport Axios from 'axios';\nimport headerConfig from '../helpers/headerHelper';\nimport { showAlertFail } from './alertAction.js';\nexport var getAllProduct = function getAllProduct(branch) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(API.PRODUCT.GET_PRODUCT_FOR_REQUEST, branch, headerConfig);\n\n              case 3:\n                request = _context.sent;\n                return _context.abrupt(\"return\", dispatch(getProductSucces(request.data)));\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", dispatch(showAlertFail(_context.t0)));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProductSucces = function getProductSucces(data) {\n  return {\n    type: ACTION_TYPES.REQUEST.SET_PRODUCT,\n    payload: data\n  };\n};\nexport var getSpecUnit = function getSpecUnit(productId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.post(API.PRODUCT.GET_SPEC_UNIT, productId, headerConfig);\n\n              case 3:\n                response = _context2.sent;\n                dispatch(setSpecUnitSelection(response.data));\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(showAlertFail(_context2.t0));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setSpecUnitSelection = function setSpecUnitSelection(data) {\n  return {\n    type: ACTION_TYPES.REQUEST.SET_SPEC_SELECTION,\n    payload: data\n  };\n};\nexport var getAmountProduct = function getAmountProduct(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Axios.post(API.PRODUCT.GET_AMOUNT_PRODUCT, id, headerConfig);\n\n              case 3:\n                response = _context3.sent;\n                dispatch(getAmountProductSuccess(response.data));\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch(showAlertFail(_context3.t0));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getAmountProductSuccess = function getAmountProductSuccess(data) {\n  return {\n    type: ACTION_TYPES.REQUEST.GET_AMOUNT_PRODUCT,\n    payload: data\n  };\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\qlt_web\\src\\actions\\requestProductAction.js"],"names":["API","ACTION_TYPES","Axios","headerConfig","showAlertFail","getAllProduct","branch","dispatch","post","PRODUCT","GET_PRODUCT_FOR_REQUEST","request","getProductSucces","data","type","REQUEST","SET_PRODUCT","payload","getSpecUnit","productId","GET_SPEC_UNIT","response","setSpecUnitSelection","SET_SPEC_SELECTION","getAmountProduct","id","GET_AMOUNT_PRODUCT","getAmountProductSuccess"],"mappings":"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","sourcesContent":["\r\nimport { API, ACTION_TYPES } from '../constants';\r\nimport Axios from 'axios';\r\nimport headerConfig from '../helpers/headerHelper'\r\nimport {showAlertFail} from './alertAction.js'\r\n\r\nexport const getAllProduct = (branch) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await Axios.post(API.PRODUCT.GET_PRODUCT_FOR_REQUEST, branch, headerConfig);\r\n      return dispatch(getProductSucces(request.data));\r\n    } catch (err) {\r\n      return dispatch(showAlertFail(err))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductSucces = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.REQUEST.SET_PRODUCT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getSpecUnit = (productId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.post(API.PRODUCT.GET_SPEC_UNIT, productId, headerConfig);\r\n      dispatch(setSpecUnitSelection(response.data));\r\n    } catch(err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const setSpecUnitSelection = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.REQUEST.SET_SPEC_SELECTION,\r\n    payload: data\r\n  }\r\n}\r\nexport const getAmountProduct = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.post(API.PRODUCT.GET_AMOUNT_PRODUCT, id, headerConfig);\r\n      dispatch(getAmountProductSuccess(response.data));\r\n    } catch(err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const getAmountProductSuccess = (data) => {\r\n  return {\r\n    type: ACTION_TYPES.REQUEST.GET_AMOUNT_PRODUCT,\r\n    payload: data\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}