{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\LV\\\\qlt\\\\qlt_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { API, ACTION_TYPES } from '../constants';\nimport Axios from 'axios';\nimport header from '../helpers/headerHelper';\nimport { showAlertFail, showAlertAndReset } from './alertAction';\nexport var init = function init(idDirector) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(API.EMPLOYEE.INIT, idDirector, header);\n\n              case 3:\n                request = _context.sent;\n                dispatch(initSuccess(request.data));\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(showAlertFail(_context.t0));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var initSuccess = function initSuccess(requestData) {\n  var branchsSelection = requestData.branchs.map(function (b) {\n    return {\n      value: b.id,\n      label: b.name\n    };\n  });\n  var rolesSeletion = requestData.roles.map(function (r) {\n    return {\n      value: r.id,\n      label: r.detail\n    };\n  });\n  return {\n    type: ACTION_TYPES.EMPLOYEE.INIT,\n    payload: {\n      branchsSeletion: branchsSelection,\n      rolesSeletion: rolesSeletion\n    }\n  };\n};\nexport var save = function save(employee) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.post(API.EMPLOYEE.SAVE, employee, header);\n\n              case 3:\n                request = _context2.sent;\n\n                if (request.status === 200) {\n                  dispatch(showAlertAndReset());\n                } else {\n                  dispatch(showAlertFail(\"Không nhận dạng lỗi\"));\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(showAlertFail(_context2.t0));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\LV\\qlt\\qlt_web\\src\\actions\\employeeAction.js"],"names":["API","ACTION_TYPES","Axios","header","showAlertFail","showAlertAndReset","init","idDirector","dispatch","post","EMPLOYEE","INIT","request","initSuccess","data","requestData","branchsSelection","branchs","map","b","value","id","label","name","rolesSeletion","roles","r","detail","type","payload","branchsSeletion","save","employee","SAVE","status"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,YAAd,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,eAAjD;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,UAAD,EAAgB;AAClC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEmBN,KAAK,CAACO,IAAN,CAAWT,GAAG,CAACU,QAAJ,CAAaC,IAAxB,EAA8BJ,UAA9B,EAA0CJ,MAA1C,CAFnB;;AAAA;AAEGS,gBAAAA,OAFH;AAGHJ,gBAAAA,QAAQ,CAACK,WAAW,CAACD,OAAO,CAACE,IAAT,CAAZ,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAKHN,gBAAAA,QAAQ,CAACJ,aAAa,aAAd,CAAR;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD,CATM;AAUP,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACE,WAAD,EAAiB;AAC1C,MAAIC,gBAAgB,GAAGD,WAAW,CAACE,OAAZ,CAAoBC,GAApB,CAAwB,UAAAC,CAAC,EAAI;AAClD,WAAO;AAACC,MAAAA,KAAK,EAAED,CAAC,CAACE,EAAV;AAAcC,MAAAA,KAAK,EAAEH,CAAC,CAACI;AAAvB,KAAP;AACD,GAFsB,CAAvB;AAGA,MAAIC,aAAa,GAAGT,WAAW,CAACU,KAAZ,CAAkBP,GAAlB,CAAsB,UAAAQ,CAAC,EAAI;AAC7C,WAAO;AAACN,MAAAA,KAAK,EAAEM,CAAC,CAACL,EAAV;AAAcC,MAAAA,KAAK,EAAEI,CAAC,CAACC;AAAvB,KAAP;AACD,GAFmB,CAApB;AAIA,SAAO;AACLC,IAAAA,IAAI,EAAE3B,YAAY,CAACS,QAAb,CAAsBC,IADvB;AAELkB,IAAAA,OAAO,EAAC;AACNC,MAAAA,eAAe,EAAEd,gBADX;AAENQ,MAAAA,aAAa,EAAEA;AAFT;AAFH,GAAP;AAOD,CAfM;AAiBP,OAAO,IAAMO,IAAI,GAAG,SAAPA,IAAO,CAACC,QAAD,EAAc;AAChC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOxB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEmBN,KAAK,CAACO,IAAN,CAAWT,GAAG,CAACU,QAAJ,CAAauB,IAAxB,EAA8BD,QAA9B,EAAwC7B,MAAxC,CAFnB;;AAAA;AAEGS,gBAAAA,OAFH;;AAGH,oBAAGA,OAAO,CAACsB,MAAR,KAAmB,GAAtB,EAA0B;AACxB1B,kBAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACD,iBAFD,MAEO;AACLG,kBAAAA,QAAQ,CAACJ,aAAa,CAAC,qBAAD,CAAd,CAAR;AACD;;AAPE;AAAA;;AAAA;AAAA;AAAA;AASHI,gBAAAA,QAAQ,CAACJ,aAAa,cAAd,CAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD,CAbM","sourcesContent":["import { API, ACTION_TYPES} from '../constants';\r\nimport Axios from 'axios';\r\nimport header from '../helpers/headerHelper';\r\nimport { showAlertFail, showAlertAndReset } from './alertAction';\r\n\r\nexport const init = (idDirector) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await Axios.post(API.EMPLOYEE.INIT, idDirector, header);\r\n      dispatch(initSuccess(request.data));\r\n    } catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\nexport const initSuccess = (requestData) => {\r\n  let branchsSelection = requestData.branchs.map(b => {\r\n    return {value: b.id, label: b.name}\r\n  });\r\n  let rolesSeletion = requestData.roles.map(r => {\r\n    return {value: r.id, label: r.detail}\r\n  })\r\n  \r\n  return {\r\n    type: ACTION_TYPES.EMPLOYEE.INIT,\r\n    payload:{\r\n      branchsSeletion: branchsSelection,\r\n      rolesSeletion: rolesSeletion\r\n    }\r\n  }\r\n}\r\n\r\nexport const save = (employee) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await Axios.post(API.EMPLOYEE.SAVE, employee, header);\r\n      if(request.status === 200){\r\n        dispatch(showAlertAndReset());\r\n      } else {\r\n        dispatch(showAlertFail(\"Không nhận dạng lỗi\"));\r\n      }\r\n    } catch (err) {\r\n      dispatch(showAlertFail(err));\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}