/*
 * FilePondPluginImagePreview 4.0.3
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */

/* eslint-disable */
const isPreviewableImage=e=>/^image/.test(e.type),cloneCanvas=(e,t)=>{(t=t||document.createElement("canvas")).width=e.width,t.height=e.height;return t.getContext("2d").drawImage(e,0,0),t},IMAGE_SCALE_SPRING_PROPS={type:"spring",stiffness:.5,damping:.45,mass:10},createVector=(e,t)=>({x:e,y:t}),vectorDot=(e,t)=>e.x*t.x+e.y*t.y,vectorSubtract=(e,t)=>createVector(e.x-t.x,e.y-t.y),vectorDistanceSquared=(e,t)=>vectorDot(vectorSubtract(e,t),vectorSubtract(e,t)),vectorDistance=(e,t)=>Math.sqrt(vectorDistanceSquared(e,t)),getOffsetPointOnEdge=(e,t)=>{const i=e,a=t,r=1.5707963267948966-t,o=Math.sin(1.5707963267948966),n=Math.sin(a),s=Math.sin(r),c=Math.cos(r),l=i/o;return createVector(c*(l*n),c*(l*s))},getRotatedRectSize=(e,t)=>{const i=e.width,a=e.height,r=getOffsetPointOnEdge(i,t),o=getOffsetPointOnEdge(a,t),n=createVector(e.x+Math.abs(r.x),e.y-Math.abs(r.y)),s=createVector(e.x+e.width+Math.abs(o.y),e.y+Math.abs(o.x)),c=createVector(e.x-Math.abs(o.y),e.y+e.height-Math.abs(o.x));return{width:vectorDistance(n,s),height:vectorDistance(n,c)}},getImageRectZoomFactor=(e,t,i,a)=>{const r=a.x>.5?1-a.x:a.x,o=a.y>.5?1-a.y:a.y,n=2*r*e.width,s=2*o*e.height,c=getRotatedRectSize(t,i);return Math.max(c.width/n,c.height/s)},getCenteredCropRect=(e,t)=>{let i=e.width,a=i*t;a>e.height&&(i=(a=e.height)/t);return{x:.5*(e.width-i),y:.5*(e.height-a),width:i,height:a}},createBitmapView=e=>e.utils.createView({name:"image-bitmap",tag:"canvas",ignoreRect:!0,mixins:{styles:["scaleX","scaleY"]},create:({root:e,props:t})=>{cloneCanvas(t.image,e.element)}}),createImageCanvasWrapper=e=>e.utils.createView({name:"image-canvas-wrapper",tag:"div",ignoreRect:!0,mixins:{apis:["crop","width","height"],styles:["originX","originY","translateX","translateY","scaleX","scaleY","rotateZ"],animations:{originX:IMAGE_SCALE_SPRING_PROPS,originY:IMAGE_SCALE_SPRING_PROPS,scaleX:IMAGE_SCALE_SPRING_PROPS,scaleY:IMAGE_SCALE_SPRING_PROPS,translateX:IMAGE_SCALE_SPRING_PROPS,translateY:IMAGE_SCALE_SPRING_PROPS,rotateZ:IMAGE_SCALE_SPRING_PROPS}},create:({root:t,props:i})=>{i.width=i.image.width,i.height=i.image.height,t.ref.image=t.appendChildView(t.createChildView(createBitmapView(e),{image:i.image}))},write:({root:e,props:t})=>{const{flip:i}=t.crop,{image:a}=e.ref;a.scaleX=i.horizontal?-1:1,a.scaleY=i.vertical?-1:1}}),createClipView=e=>e.utils.createView({name:"image-clip",tag:"div",ignoreRect:!0,mixins:{apis:["crop","width","height"],styles:["width","height","opacity"],animations:{opacity:{type:"tween",duration:250}}},create:({root:t,props:i})=>{t.ref.image=t.appendChildView(t.createChildView(createImageCanvasWrapper(e),Object.assign({},i)));const a=t.query("GET_IMAGE_PREVIEW_TRANSPARENCY_INDICATOR");null!==a&&(t.element.dataset.transparencyIndicator="grid"===a?a:"color")},write:({root:e,props:t,shouldOptimize:i})=>{const{crop:a,width:r,height:o}=t;e.ref.image.crop=a;const n={x:0,y:0,width:r,height:o,center:{x:.5*r,y:.5*o}},s={width:e.ref.image.width,height:e.ref.image.height},c={x:a.center.x*s.width,y:a.center.y*s.height},l={x:n.center.x-s.width*a.center.x,y:n.center.y-s.height*a.center.y},h=2*Math.PI+a.rotation%(2*Math.PI),g=a.aspectRatio||s.height/s.width,p=getImageRectZoomFactor(s,getCenteredCropRect(n,g),h,a.center),E=a.zoom*p,_=e.ref.image;if(i)return _.originX=null,_.originY=null,_.translateX=null,_.translateY=null,_.rotateZ=null,_.scaleX=null,void(_.scaleY=null);_.originX=c.x,_.originY=c.y,_.translateX=l.x,_.translateY=l.y,_.rotateZ=h,_.scaleX=E,_.scaleY=E}}),createImageView=e=>e.utils.createView({name:"image-preview",tag:"div",ignoreRect:!0,mixins:{apis:["crop"],styles:["translateY","scaleX","scaleY","opacity"],animations:{scaleX:IMAGE_SCALE_SPRING_PROPS,scaleY:IMAGE_SCALE_SPRING_PROPS,translateY:IMAGE_SCALE_SPRING_PROPS,opacity:{type:"tween",duration:400}}},create:({root:t,props:i})=>{t.ref.clip=t.appendChildView(t.createChildView(createClipView(e),{image:i.image,crop:i.crop}))},write:({root:e,props:t,shouldOptimize:i})=>{const{clip:a}=e.ref,{crop:r,image:o}=t;if(a.crop=r,a.opacity=i?0:1,i)return;const n=o.height/o.width;let s=r.aspectRatio||n;const c=e.rect.inner.width,l=e.rect.inner.height;let h=e.query("GET_IMAGE_PREVIEW_HEIGHT");const g=e.query("GET_IMAGE_PREVIEW_MIN_HEIGHT"),p=e.query("GET_IMAGE_PREVIEW_MAX_HEIGHT"),E=e.query("GET_PANEL_ASPECT_RATIO"),_=e.query("GET_ALLOW_MULTIPLE");E&&!_&&(h=c*E,s=E);let d=null!==h?h:Math.max(g,Math.min(c*s,p)),I=d/s;I>c&&(d=(I=c)*s),d>l&&(d=l,I=l/s),a.width=I,a.height=d}});let SVG_MASK='<svg width="500" height="200" viewBox="0 0 500 200" preserveAspectRatio="none">\n    <defs>\n        <radialGradient id="gradient-__UID__" cx=".5" cy="1.25" r="1.15">\n            <stop offset=\'50%\' stop-color=\'#000000\'/>\n            <stop offset=\'56%\' stop-color=\'#0a0a0a\'/>\n            <stop offset=\'63%\' stop-color=\'#262626\'/>\n            <stop offset=\'69%\' stop-color=\'#4f4f4f\'/>\n            <stop offset=\'75%\' stop-color=\'#808080\'/>\n            <stop offset=\'81%\' stop-color=\'#b1b1b1\'/>\n            <stop offset=\'88%\' stop-color=\'#dadada\'/>\n            <stop offset=\'94%\' stop-color=\'#f6f6f6\'/>\n            <stop offset=\'100%\' stop-color=\'#ffffff\'/>\n        </radialGradient>\n        <mask id="mask-__UID__">\n            <rect x="0" y="0" width="500" height="200" fill="url(#gradient-__UID__)"></rect>\n        </mask>\n    </defs>\n    <rect x="0" width="500" height="200" fill="currentColor" mask="url(#mask-__UID__)"></rect>\n</svg>',checkedMyBases=!1,SVGMaskUniqueId=0;const createImageOverlayView=e=>e.utils.createView({name:"image-preview-overlay",tag:"div",ignoreRect:!0,create:({root:e,props:t})=>{!checkedMyBases&&document.querySelector("base")&&(SVG_MASK=SVG_MASK.replace(/url\(\#/g,"url("+window.location.href.replace(window.location.hash,"")+"#"),checkedMyBases=!0),SVGMaskUniqueId++,e.element.classList.add(`filepond--image-preview-overlay-${t.status}`),e.element.innerHTML=SVG_MASK.replace(/__UID__/g,SVGMaskUniqueId)},mixins:{styles:["opacity"],animations:{opacity:{type:"spring",mass:25}}}}),BitmapWorker=function(){self.onmessage=(e=>{createImageBitmap(e.data.message.file).then(t=>{self.postMessage({id:e.data.id,message:t},[t])})})},getImageSize=(e,t)=>{let i=new Image;i.onload=(()=>{const e=i.naturalWidth,a=i.naturalHeight;i=null,t(e,a)}),i.src=e},transforms={1:()=>[1,0,0,1,0,0],2:e=>[-1,0,0,1,e,0],3:(e,t)=>[-1,0,0,-1,e,t],4:(e,t)=>[1,0,0,-1,0,t],5:()=>[0,1,1,0,0,0],6:(e,t)=>[0,1,-1,0,t,0],7:(e,t)=>[0,-1,-1,0,t,e],8:e=>[0,-1,1,0,0,e]},fixImageOrientation=(e,t,i,a)=>{-1!==a&&e.transform(...transforms[a](t,i))},createPreviewImage=(e,t,i,a)=>{t=Math.round(t),i=Math.round(i);const r=document.createElement("canvas");r.width=t,r.height=i;const o=r.getContext("2d");return a>=5&&a<=8&&([t,i]=[i,t]),fixImageOrientation(o,t,i,a),o.drawImage(e,0,0,t,i),r},isBitmap=e=>/^image/.test(e.type)&&!/svg/.test(e.type),MAX_WIDTH=10,MAX_HEIGHT=10,calculateAverageColor=e=>{const t=Math.min(10/e.width,10/e.height),i=document.createElement("canvas"),a=i.getContext("2d"),r=i.width=Math.ceil(e.width*t),o=i.height=Math.ceil(e.height*t);a.drawImage(e,0,0,r,o);let n=null;try{n=a.getImageData(0,0,r,o).data}catch(e){return null}const s=n.length;let c=0,l=0,h=0,g=0;for(;g<s;g+=4)c+=n[g]*n[g],l+=n[g+1]*n[g+1],h+=n[g+2]*n[g+2];return c=averageColor(c,s),l=averageColor(l,s),h=averageColor(h,s),{r:c,g:l,b:h}},averageColor=(e,t)=>Math.floor(Math.sqrt(e/(t/4))),loadImage=e=>new Promise((t,i)=>{const a=new Image;a.crossOrigin="Anonymous",a.onload=(()=>{t(a)}),a.onerror=(e=>{i(e)}),a.src=e}),createImageWrapperView=e=>{const t=createImageOverlayView(e),i=createImageView(e),a=({root:e,props:t})=>{const a=t.id,r=e.query("GET_ITEM",{id:a});if(!r)return;const o=t.preview,n=r.getMetadata("crop")||{center:{x:.5,y:.5},flip:{horizontal:!1,vertical:!1},zoom:1,rotation:0,aspectRatio:null},s=e.appendChildView(e.createChildView(i,{image:o,crop:n,opacity:0,scaleX:1.15,scaleY:1.15,translateY:15}),e.childViews.length);e.ref.images.push(s),s.opacity=1,s.scaleX=1,s.scaleY=1,s.translateY=0,setTimeout(()=>{e.dispatch("DID_IMAGE_PREVIEW_SHOW",{id:a})},250)},r=({root:e})=>{e.ref.overlayShadow.opacity=1,e.ref.overlayError.opacity=0,e.ref.overlaySuccess.opacity=0},o=({root:e})=>{e.ref.overlayShadow.opacity=.25,e.ref.overlayError.opacity=1};return e.utils.createView({name:"image-preview-wrapper",create:({root:e})=>{e.ref.images=[],e.ref.imageViewBin=[],e.ref.overlayShadow=e.appendChildView(e.createChildView(t,{opacity:0,status:"idle"})),e.ref.overlaySuccess=e.appendChildView(e.createChildView(t,{opacity:0,status:"success"})),e.ref.overlayError=e.appendChildView(e.createChildView(t,{opacity:0,status:"failure"}))},styles:["height"],apis:["height"],write:e.utils.createRoute({DID_IMAGE_PREVIEW_DRAW:({root:e})=>{const t=e.ref.images[e.ref.images.length-1];t.translateY=0,t.scaleX=1,t.scaleY=1,t.opacity=1},DID_IMAGE_PREVIEW_CONTAINER_CREATE:({root:e,props:t})=>{const{id:i}=t,a=e.query("GET_ITEM",i);if(!a)return;const r=URL.createObjectURL(a.file);getImageSize(r,(t,a)=>{e.dispatch("DID_IMAGE_PREVIEW_CALCULATE_SIZE",{id:i,width:t,height:a})})},DID_FINISH_CALCULATE_PREVIEWSIZE:({root:t,props:i})=>{const{utils:r}=e,{createWorker:o}=r,{id:n}=i,s=t.query("GET_ITEM",n);if(!s)return;const c=URL.createObjectURL(s.file),l=()=>{loadImage(c).then(h)},h=e=>{URL.revokeObjectURL(c);const r=(s.getMetadata("exif")||{}).orientation||-1;let{width:o,height:n}=e;r>=5&&r<=8&&([o,n]=[n,o]);const l=window.devicePixelRatio,h=n/o,g=t.rect.element.width,p=t.rect.element.height;let E=0,_=0;_=(E=g)*h,h>1?_=(E=g)*h:E=(_=p)/h,i.preview=createPreviewImage(e,Math.min(o,E*l*4),Math.min(n,_*l*4),r);const d=t.query("GET_IMAGE_PREVIEW_CALCULATE_AVERAGE_IMAGE_COLOR")?calculateAverageColor(e):null;s.setMetadata("color",d,!0),"close"in e&&e.close(),t.ref.overlayShadow.opacity=1,a({root:t,props:i})};if((e=>"createImageBitmap"in window&&isBitmap(e))(s.file)){const e=o(BitmapWorker);e.post({file:s.file},t=>{e.terminate(),t?h(t):l()})}else l()},DID_UPDATE_ITEM_METADATA:({root:e,props:t,action:i})=>{if("crop"!==i.change.key||!e.ref.images.length)return;const r=e.query("GET_ITEM",{id:t.id});if(!r)return;const o=r.getMetadata("crop"),n=e.ref.images[e.ref.images.length-1];Math.abs(o.aspectRatio-n.crop.aspectRatio)>1e-5?((({root:e})=>{const t=e.ref.images.shift();t.opacity=0,t.translateY=-15,e.ref.imageViewBin.push(t)})({root:e}),a({root:e,props:t})):(({root:e,props:t})=>{const i=e.query("GET_ITEM",{id:t.id});i&&(e.ref.images[e.ref.images.length-1].crop=i.getMetadata("crop"))})({root:e,props:t})},DID_THROW_ITEM_LOAD_ERROR:o,DID_THROW_ITEM_PROCESSING_ERROR:o,DID_THROW_ITEM_INVALID:o,DID_COMPLETE_ITEM_PROCESSING:({root:e})=>{e.ref.overlayShadow.opacity=.25,e.ref.overlaySuccess.opacity=1},DID_START_ITEM_PROCESSING:r,DID_REVERT_ITEM_PROCESSING:r},({root:e})=>{const t=e.ref.imageViewBin.filter(e=>0===e.opacity);e.ref.imageViewBin=e.ref.imageViewBin.filter(e=>e.opacity>0),t.forEach(t=>((e,t)=>{e.removeChildView(t),t._destroy()})(e,t)),t.length=0})})};var plugin$1=e=>{const{addFilter:t,utils:i}=e,{Type:a,createRoute:r,isFile:o}=i,n=createImageWrapperView(e);return t("CREATE_VIEW",e=>{const{is:t,view:i,query:a}=e;if(!t("file")||!a("GET_ALLOW_IMAGE_PREVIEW"))return;const s=(e,t)=>{if(!e.ref.imagePreview)return;let{id:i}=t;const a=e.query("GET_ITEM",{id:i});if(!a)return;const r=e.query("GET_PANEL_ASPECT_RATIO"),o=e.query("GET_ITEM_PANEL_ASPECT_RATIO"),n=e.query("GET_IMAGE_PREVIEW_HEIGHT");if(r||o||n)return;let{imageWidth:s,imageHeight:c}=e.ref;if(!s||!c)return;const l=e.query("GET_IMAGE_PREVIEW_MIN_HEIGHT"),h=e.query("GET_IMAGE_PREVIEW_MAX_HEIGHT"),g=(a.getMetadata("exif")||{}).orientation||-1;if(g>=5&&g<=8&&([s,c]=[c,s]),!isBitmap(a.file)){const e=2048/s;s*=e,c*=e}const p=c/s,E=(a.getMetadata("crop")||{}).aspectRatio||p;let _=Math.max(l,Math.min(c,h));const d=e.rect.element.width,I=Math.min(d*E,_);e.dispatch("DID_UPDATE_PANEL_HEIGHT",{id:a.id,height:I})},c=({root:e,props:t})=>{s(e,t)};i.registerWriter(r({DID_RESIZE_ROOT:c,DID_STOP_RESIZE:c,DID_LOAD_ITEM:({root:e,props:t,actions:r})=>{const{id:s}=t,c=a("GET_ITEM",s);if(!c||!o(c.file)||c.archived)return;const l=c.file;if(!isPreviewableImage(l))return;const h="createImageBitmap"in(window||{}),g=a("GET_IMAGE_PREVIEW_MAX_FILE_SIZE");if(!h&&g&&l.size>g)return;e.ref.imagePreview=i.appendChildView(i.createChildView(n,{id:s}));const p=e.query("GET_IMAGE_PREVIEW_HEIGHT");p&&e.dispatch("DID_UPDATE_PANEL_HEIGHT",{id:c.id,height:p});const E=!h&&l.size>a("GET_IMAGE_PREVIEW_MAX_INSTANT_PREVIEW_FILE_SIZE");e.dispatch("DID_IMAGE_PREVIEW_CONTAINER_CREATE",{id:s},E)},DID_IMAGE_PREVIEW_CALCULATE_SIZE:({root:e,props:t,action:i})=>{e.ref.imageWidth=i.width,e.ref.imageHeight=i.height,s(e,t),requestAnimationFrame(()=>{e.dispatch("DID_FINISH_CALCULATE_PREVIEWSIZE")})},DID_UPDATE_ITEM_METADATA:({root:e,props:t,action:i})=>{"crop"===i.change.key&&s(e,t)}}))}),{options:{allowImagePreview:[!0,a.BOOLEAN],imagePreviewHeight:[null,a.INT],imagePreviewMinHeight:[44,a.INT],imagePreviewMaxHeight:[256,a.INT],imagePreviewMaxFileSize:[null,a.INT],imagePreviewMaxInstantPreviewFileSize:[1e6,a.INT],imagePreviewTransparencyIndicator:[null,a.STRING],imagePreviewCalculateAverageImageColor:[!1,a.BOOLEAN]}}};const isBrowser="undefined"!=typeof window&&void 0!==window.document;isBrowser&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin$1}));export default plugin$1;